# ========= Infrastructure ==============:
# Infrastructure:
    ✔ UI Repo and basic framework
    ✔ API Repo and basic framework
    - Steps to run the projects
    - Apply Repo restriction
    - Code merging approach
    - Test Env setup in AWS
    - Prod Env setup in AWS
    - DB Connection and Password protection/injection

# Create tickets:
    - Beakdown requirements into task @started
    - Create tickets in Github @started    
====== Modules =====:
# Participants:
    ✔ Import Participants data (DB)
    ✔ List view UI: Display Participants @done
    ✔ API: Display Participants @done
    ✔ Detail view UI: Display Participants @done
    - Remove grouping
    - Freeze column header
    - Provide search options e.g region / center / name
    - delete and report one by one for the matching BAPSId
    - Additional fields: 
        - BAPS ID: add this field once added to PBI
        - Participation center (can be different that center of candidate)
        - Checkin field

# Region and Centers Schema:
    - DB: Schema (Id, Region Name, Center Name) 
    - API: LIST
    - UI: LIST
        
# SKILL and CATEGORIES Schema:
    - DB: Schema (Id, SkillName, Category Name) 
    - API: LIST
    - UI: LIST

# Skill Grading Questions CRUD:
    - DB: Schema (Id, Topic Name, Decription, Round, Weightages[], RequiredProctors, IsActive)
    - API: List / Add / Edit 
    - UI: List / Add / Edit 

# Events CRUD:
    - DB: Schema: (Id, Event Name, Event Start Date Time, Event End Date Time, Region, Centers[], IsActive)
    - API: List / Add / Edit 
    - UI: List / Add / Edit 
    - Note: 
        - Proctor Admins will be able to create events for proctoring, selecting the number of centers, and forming clusters of centers for a specific event. 
        - Set Event Periods: The Proctor Admin can specify the start and end time for proctoring events. 
        - During this period, only delegates from the selected centers will be allowed to participate.
        - Regional admin can only change the time, but not the date

# Grading Participants CRUD:
    - Display tabs according to the skills access to the proctor:
        - API
        - UI
    - Search Candidate by proctor
        - API: (The delegate will only be shown if they have participated in the selected competition (based on the tab) and if the competition category aligns with the proctor’s allowed access)
        - UI : (A text input field and QR scan option, like the satsang mukhpath, will appear on the screen)
    - Display list of topic based on selected skill for a candidate (Once proctor clicks start proctoring, the proctor will be shown a series of question topics)
        - API
        - UI
    - Grade Candidate skills by proctor
        - DB: Schema : Candidate ID, ProctorId, SKILL CATEGORY ID, Grading Topic Id, Weitage)
        - API
        - UI
    - View list of graded candidite
        - API
        - UI
        - Allow edit option to change the grade
        - Once event time is over, NO ONE should be able to change the grade
        
    - Candidate Status: Return status of candidate's each skill competition status (PENDING / COMPLETED)
        - UI
        - API : return COMPLETED if all the topic has been graded else PENDING
    
    - Participant BAPS ID authentication API using encode/decode BAPS ID

    - TBD: at a time only x proctors should be able to access or grade the candidate

# Scheduling Participants:
    - Generate schedule for given cluster file
    - Save cluster schedule to database
    - View Saved cluster schedule
    - Export cluster schedule
    - API: Get a schedule for a candidate (API can be called from mySatsangApp or Adhiveshan portal)

# Export:
    - Clustors / National Admins / Regional Admins / Proctors or Users / Events / Grading
# Dashboard:
    - Events View
        - In progress
        - up coming
    - Skill Participants Count
    - Regional wise proctors count

# Check In moduel:
    - UI: Search by MIS ID or BAPS ID
    - API: Search by MIS ID or BAPS ID from Participats AND Users
    - UI: Check in for the MIS ID or BAPS ID
    - API: Check in by MIS ID or BAPS ID in Participats AND Users

===== Cross Cutting =====:
# Users:
    - DB: Schema  (Id, BAPS ID, NAME, Region, Center, Roles[], EventIds[], Mandals[], SKILL CATEGORY IDs[], Password, Checkin, IsActive)
    - API: Add / Edit 
    - UI: Add / Edit 
    - Note:
        - Roles are National Admin / Regional Admin / Proctors 
        - National Admin: Can manage regional admin AND proctors of all region of ANY genders
        - Regional Admin: Can manage proctors according to THEIR gender
        - Proctor: Can search and grade participant of their ASSIGNED EVENTS and ASSIGNED SKILLS and ASSIGNED GENDERS only

# Roles and Permissions:
    - 1. Role: National Admin User:
        - CRUD Regional Admin Users
        - CRUD Events 
        - View Proctor Users
        - CRUD Skill Grading Questions
    - 2. Role: Regional Admin User:
        - CRUD Proctor Users
        - View Skill Grading Questions
    - 3. Role: Proctor User:
        - Search Participant
        - Grade Participant

# Authentication (Login / Logout):
    - UI 
    - API 
    - Check Access on each screen/menu based on permissions: 
# Audit fields:
    - Audit field in all tables
    - Set audit fields while add/edit
# Activity tracking:
    - DB: Schema (TableName, RecordId, Activity, Activity By, Activity On)
    - API:
- test
    - UI:
